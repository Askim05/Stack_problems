//{ Driver Code Starts
import java.util.*;

class FindMinCost
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		int t = sc.nextInt();
		while(t > 0)
		{
			int n = sc.nextInt();
			int m = sc.nextInt();
			int arr[][] = new int[n][m];
			for(int i=0; i<n; i++)
			{
				for(int j=0; j<m; j++ )
				{
					arr[i][j] = sc.nextInt();
				}
			}
			System.out.println(new Solution().maxArea(arr, n, m));
		t--;
		}
	}
}
// } Driver Code Ends


/*Complete the function given below*/
class Solution {
    public static int[] NSL(int arr[],int n){
        Stack<Integer> stack=new Stack<>();
        int[] lis=new int[n];
        int i=0;
        while(i<n){
            if(stack.empty()){
                lis[i]=-1;
                stack.push(i);
                i++;
            }
            else if(arr[stack.peek()]<arr[i]){
                lis[i]=stack.peek();
                stack.push(i);
                i++;
            }
            else{
                stack.pop();
            }
        }
        return lis;
    }
    
    public static int[] NSR(int arr[],int n){
        Stack<Integer> stack=new Stack<>();
        int lis[]=new int[n];
        int i=n-1;
        while(i>=0){
            if(stack.empty()){
                lis[i]=n;
                stack.push(i);
                i--;
            }
            else if(arr[stack.peek()]<arr[i]){
                lis[i]=stack.peek();
                stack.push(i);
                i--;
            }
            else{
                stack.pop();
            }
        }
        return lis;
    }
    
    public static int MAR(int ar[],int n){
        int nsr[]=NSR(ar,n);
        int nsl[]=NSL(ar,n);
        
        int ans=0;
        for(int i=0;i<n;i++){
            int temp=nsr[i]-nsl[i]-1;
            if(temp*ar[i]>ans){
                ans=temp*ar[i];
            }
        }
        return ans;
    }
    
    public int maxArea(int arr[][], int n, int m) {
        int temp[]=new int[m];
        int ans=0;
        for(int i=0;i<n;i++){
            int x=0;
            for(int j=0;j<m;j++){
                if(arr[i][j]!=0){
                    temp[j]+=arr[i][j];
                }
                else{
                    temp[j]=0;
                }
            }
            x=MAR(temp,temp.length);
            if(x>ans){
                ans=x;
            }
        }
        return ans;
        // add code here.
    }
}
